{"version":3,"sources":["dragTheme.js","common/Drag&Drop/SelectOptions.js","App.js","reportWebVitals.js","index.js"],"names":["GreenCheckbox","withStyles","root","color","checked","props","Checkbox","InputField","width","TextField","id","label","variant","type","useStyles","makeStyles","checkboxContainer","display","flexDirection","alignItems","listStyle","backgroundColor","height","borderBottom","greenButton","margin","dndContainer","justifyContent","btnContainer","transferButton","navContainer","allSection","border","fontSize","marginLeft","checkboxes","gridTemplateRows","minWidth","overflowY","scrollbarWidth","padding","checkbox_style","checkbox_color","dragContainer","loader","SelectOptions","useState","choicesCount","setChoicesCount","chosenCount","setChosenCount","choices","setChoices","chosen","setChosen","loading","setLoading","inputText","setInputText","useDebounce","value","useEffect","getNextOptions","observer","useRef","lastOption","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","classes","a","names","data","forEach","element","dataObj","map","obj","title","first","err","console","log","message","fetchData","onCheckedChoicesHandler","e","newArray","Array","from","target","name","onCheckedChosenHandler","className","onChange","onDragEnd","result","destination","index","source","items","splice","newItems","isDropDisabled","length","droppableId","uuid","provided","droppableProps","ref","innerRef","choice","draggableId","draggableProps","dragHandleProps","placeholder","Button","disabled","onClick","checkedArray","filter","unCheckedArray","onDragUpdate","App","options","setOptions","pageNumber","setPageNumber","axios","get","results","alert","prevPageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ae07011.chunk.js","sourcesContent":["import { makeStyles,withStyles } from '@material-ui/core/styles';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport TextField from \"@material-ui/core/TextField\"\r\n\r\nconst GreenCheckbox = withStyles({\r\n\r\n  root: {\r\n    \r\n    '&$checked': {\r\n      color: 'green',\r\n      \r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n\r\nconst InputField = withStyles({\r\n  root: {\r\n    width:'202px',\r\n\r\n    '&:focus': {\r\n      color: 'green',\r\n      \r\n    },\r\n  }\r\n})((props) => <TextField id=\"outlined-search\" label=\"Search by board name\" variant='standard' type=\"search\" {...props} />);\r\n\r\nconst useStyles = makeStyles({\r\n\r\n//   root: {\r\n//     border: 0,\r\n//     borderRadius: 3,\r\n//     boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n//     color: 'white',\r\n//     height: 48,\r\n//     padding: '0 30px',\r\n//   },\r\n\r\n\r\n  checkboxContainer : {\r\n    display:'flex',\r\n    flexDirection:'row',\r\n    //justifyContent: 'flex-end',\r\n    alignItems:'center',\r\n    listStyle:'none',\r\n    backgroundColor:'none',\r\n    width:'inherit',\r\n    height:'calc(10vh - 1px)',\r\n    borderBottom:'1px solid rgb(224, 224, 224)',\r\n    ':last-child': {\r\n      borderBottom:'none'\r\n    },\r\n  },\r\n\r\n  \r\n\r\n  greenButton: {\r\n    margin:'5px 0px',\r\n    backgroundColor: 'green',\r\n    color: '#000',\r\n    '&:enabled': {\r\n      backgroundColor: 'green',\r\n      color: '#000',\r\n      '&:hover': {\r\n        backgroundColor: 'green',\r\n        color: '#000'\r\n    }\r\n  }\r\n},\r\n\r\n  dndContainer:{\r\n    display:'flex',\r\n    flexDirection:'row',\r\n    justifyContent: 'center',\r\n    alignItems:'center',\r\n    listStyle:'none',\r\n    //height:'auto',\r\n  },\r\n\r\n  btnContainer:{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      margin:'0px 40px',\r\n  },\r\n  transferButton:{\r\n      margin: '5px 0px',\r\n  },\r\n  \r\n  navContainer:{\r\n    display:'flex',\r\n    flexDirection:'row',\r\n    justifyContent: 'center',\r\n    alignItems:'center',\r\n    backgroundColor: 'none',\r\n  },\r\n  allSection:{\r\n      width: '200px',\r\n      display: 'flex',\r\n      backgroundColor: 'none',\r\n      justifyContent: 'center',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      border: '1px solid rgb(224, 224, 224)',\r\n      borderBottom:'none',\r\n      '& p':{\r\n               margin: '0px auto',\r\n               fontSize: '14px'\r\n      },\r\n      '& div':{\r\n           marginLeft:'40px',\r\n         } \r\n  },\r\n//   countLabel{\r\n//       margin: 0px auto;\r\n//       font-size: 14px;\r\n//   },\r\n//   /* .all-section p{\r\n//       margin: 0px auto;\r\n//       font-size: 14px;\r\n//   } */\r\n//   /* .all-section div{\r\n//     margin-left:20px\r\n// } */\r\n  checkboxes:{\r\n      backgroundColor: 'none',\r\n      display: 'grid',\r\n      gridTemplateRows: 'repeat(7, 1fr)',\r\n      width: '15%',\r\n      minWidth:'200px',\r\n      height:\"70vh\",\r\n      border: '1px solid rgb(224, 224, 224)',\r\n      //borderBottom:'none',\r\n      overflowY:'scroll',\r\n      scrollbarWidth:'none',\r\n      '& ul':{\r\n        margin:0,\r\n        padding:0\r\n      },\r\n      '&::-webkit-scrollbar': {\r\n        width: 0,\r\n        height: 0\r\n      },\r\n      '-ms-overflow-style': 'none'\r\n      \r\n      \r\n    //   -ms-overflow-style: none;\r\n    //   .container {\r\n    //     overflow-y: scroll;\r\n    //     scrollbar-width: none; /* Firefox */\r\n    //     -ms-overflow-style: none;  /* Internet Explorer 10+ */\r\n    // }\r\n    // .container::-webkit-scrollbar { /* WebKit */\r\n    //     width: 0;\r\n    //     height: 0;\r\n    // }\r\n      },\r\n\r\n  // container:{\r\n  //     display: 'flex',\r\n  //     flexDirection: 'column',\r\n  //     justifyContent: 'center',\r\n  //     alignItems: 'flex-start',\r\n  //     backgroundColor: 'none',\r\n  //     width: 'auto',\r\n      \r\n  //     '& li':{\r\n  //       backgroundColor: 'none',\r\n  //       width: 'auto',\r\n  //       display: 'flex',\r\n  //       flexDirection: 'row',\r\n  //       alignItems: 'center',\r\n  //       justifyContent: 'flex-start'\r\n  //   }\r\n  // },\r\n  checkbox_style :{\r\n   \r\n      //margin:'0px 5px',\r\n      //marginRight:'10px',\r\n      //checked\r\n  },\r\n//container  \r\n//   /* ul li label{\r\n//       margin: 0px 15px;\r\n//   } */\r\n//   titleLabel{\r\n//     margin: 0px 15px;\r\n//   },\r\ncheckbox_color:{\r\n  color:'red'\r\n},\r\n  dragContainer:{\r\n    /* border-bottom: 1px solid black; */\r\n    //margin: '0px auto',\r\n    //width: '600px'\r\n},\r\n loader:{\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end'\r\n} \r\n\r\n});\r\n\r\n\r\n\r\nexport default useStyles;\r\nexport {\r\n  GreenCheckbox,InputField\r\n}","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport useStyles from \"../../dragTheme\";\r\nimport { GreenCheckbox, InputField } from \"../../dragTheme\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport uuid from \"react-uuid\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { useDebounce } from \"use-debounce\";\r\n\r\nconst SelectOptions = (props) => {\r\n  const [choicesCount, setChoicesCount] = useState(0);\r\n  const [chosenCount, setChosenCount] = useState(0);\r\n  const [choices, setChoices] = useState([]);\r\n  const [chosen, setChosen] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [value] = useDebounce(inputText, 300);\r\n\r\n  useEffect(() => {\r\n    setInputText(\"\");\r\n    setLoading(true);\r\n    props.getNextOptions();\r\n  }, [value]);\r\n\r\n\r\n  // let inputRef = useRef();\r\n\r\n  // let newFn = () => {\r\n  //   console.log(inputRef.current);\r\n  // };\r\n\r\n  // let debounce = (func, wait) => {\r\n  //   let timeout;\r\n  //   return function (...args) {\r\n  //     console.log(...args);\r\n  //     if (timeout) clearTimeout(timeout);\r\n  //     timeout = setTimeout(() => {\r\n  //       timeout = null;\r\n\r\n  //       func();\r\n  //     }, wait);\r\n  //   };\r\n  // };\r\n  // const debounceOnChange = React.useCallback(debounce(newFn, 300), []);\r\n\r\n  const observer = useRef();\r\n\r\n  const dragUpdate = (e) => {\r\n    \r\n\r\n    console.log(e.destination.index);\r\n    // if(e.destination.index > choices.length - 5)\r\n    // {\r\n    //   console.log(e)\r\n    //   onDragEndHandlerForChoices(e);\r\n    // }\r\n    // try {\r\n    //   console.log(e);\r\n    //   console.log(e.destination.index > (choices.length - 5));\r\n    // } catch (error) {\r\n    //   console.log(error.message);\r\n    // }\r\n\r\n    // if(e.destination.index > choices.length - 4)\r\n    // return;\r\n\r\n    // observer.current = new IntersectionObserver(entries=>{\r\n    //   if(entries[0].isIntersecting){\r\n\r\n    //     return\r\n    //    // props.getNextOptions();\r\n    //     //setPageNumber(prevPageNumber=>prevPageNumber+1);\r\n    //   }\r\n\r\n    // })\r\n  };\r\n\r\n  const lastOption = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setLoading(true);\r\n          props.getNextOptions();\r\n        }\r\n      });\r\n\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading]\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  //get random 10 users and add it to available choices\r\n  // useEffect(() => {\r\n  //   //console.log(pageNumber);\r\n  //   if(!value) return;\r\n  //   setLoading(true);\r\n  //   let filteredData;\r\n  //   async function fetchData() {\r\n  //     try {\r\n  //       //Just pass options to the drag and drop.\r\n  //       console.log('inside function')\r\n  //       console.log(value);\r\n\r\n  //      const data = await axios.get(\r\n  //         `http://openlibrary.org/search.json?q=${inputText?inputText:'test'}&page=${pageNumber}`\r\n  //       );\r\n  //       let booksData;\r\n  //       booksData = data.data.docs.slice(0,20).map(item=>item.title.slice(0,12));\r\n  //       console.log(booksData)\r\n  //       filteredData = [... new Set(booksData)].slice(0,10);\r\n\r\n  //       console.log('after adding checked prop')\r\n  //       let dataObj = filteredData.map((obj) => {\r\n  //         return {\r\n  //           title: obj,\r\n  //           checked: false,\r\n  //         };\r\n  //       });\r\n\r\n  //       setLoading(false);\r\n  //       setChoices(dataObj);\r\n\r\n  //     } catch (err) {\r\n  //       console.log(err.message)\r\n  //       //  alert(err)\r\n  //     }\r\n  //   }\r\n\r\n  //   fetchData();\r\n\r\n  // }, [value, pageNumber]);\r\n\r\n  //get random 10 users and add it to available choices\r\n  useEffect(() => {\r\n    if (value) return props.getNextOptions();\r\n\r\n    async function fetchData() {\r\n      try {\r\n        //Just pass options to the drag and drop.\r\n        // const data = await axios.get(\r\n        //   `https://randomuser.me/api?page=${pageNumber}&results=20`\r\n        // );\r\n        // let names = data.data.results.map((obj) => obj.name);\r\n\r\n        let names = props.data;\r\n\r\n        if (names) {\r\n          names.forEach((element) => {\r\n            element.checked = false;\r\n          });\r\n\r\n          let dataObj = names.map((obj) => {\r\n            return {\r\n              title: obj.first,\r\n              checked: obj.checked,\r\n            };\r\n          });\r\n\r\n          // if(dataObj.length>0)\r\n          // setLoadMore(true);\r\n\r\n          // if (choices) setChoices([...choices, ...dataObj]);\r\n          // else\r\n\r\n          setChoices(dataObj);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n      setLoading(false);\r\n      //setChoices(dataObj);\r\n    }\r\n\r\n    fetchData();\r\n  }, [props.data, value]);\r\n\r\n  const onDragEndHandlerForChoices = (result) => {\r\n    try {\r\n      if (!result) return;\r\n\r\n      if (!result.destination) return;\r\n\r\n      // if(result.destination?.index === choices.length)\r\n      // return;\r\n\r\n      if (result.destination.index === result.source.index) return;\r\n\r\n      if (loading) return;\r\n\r\n      const items = Array.from(choices);\r\n      const [newItems] = items.splice(result.source.index, 1);\r\n      items.splice(result.destination.index, 0, newItems);\r\n\r\n      setChoices(items);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  let transferToRight = () => {\r\n    //get all checked and unchecked of choices\r\n\r\n    let checkedArray = Array.from(choices).filter(\r\n      (obj) => obj.checked === true\r\n    );\r\n    let unCheckedArray = Array.from(choices).filter(\r\n      (obj) => obj.checked === false\r\n    );\r\n\r\n    setChoices(unCheckedArray);\r\n\r\n    //set checked to false and add it to chosen\r\n    checkedArray = checkedArray.map((obj) => {\r\n      obj.checked = false;\r\n\r\n      return obj;\r\n    });\r\n\r\n    setChoicesCount((choicesCount) => choicesCount - checkedArray.length);\r\n    //let newChosen = [].slice(0,20);\r\n    setChosen([...checkedArray,...chosen]);\r\n  };\r\n\r\n  let transferToLeft = () => {\r\n    //get all checked and unchecked of choices\r\n\r\n    let checkedArray = Array.from(chosen).filter((obj) => obj.checked === true);\r\n    let unCheckedArray = Array.from(chosen).filter(\r\n      (obj) => obj.checked === false\r\n    );\r\n\r\n    setChosen(unCheckedArray);\r\n\r\n    //set checked to false and add it to chosen\r\n    checkedArray = checkedArray.map((obj) => {\r\n      obj.checked = false;\r\n\r\n      return obj;\r\n    });\r\n\r\n    setChosenCount((chosenCount) => chosenCount - checkedArray.length);\r\n    setChoices([...checkedArray, ...choices]);\r\n  };\r\n\r\n  const onDragEndHandlerForChosen = (result) => {\r\n    if (loading) return;\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(chosen);\r\n    const [newItems] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, newItems);\r\n\r\n    setChosen(items);\r\n  };\r\n\r\n  const onCheckedChoicesHandler = (e) => {\r\n    let newArray = Array.from(choices).map((obj) => {\r\n      if (obj.title === e.target.name) obj.checked = !obj.checked;\r\n\r\n      return obj;\r\n    });\r\n\r\n    if (e.target.checked) setChoicesCount(choicesCount + 1);\r\n    else setChoicesCount(choicesCount - 1);\r\n\r\n    setChoices(newArray);\r\n  };\r\n\r\n  const onCheckedChosenHandler = (e) => {\r\n    let newArray = Array.from(chosen).map((obj) => {\r\n      if (obj.title === e.target.name) obj.checked = !obj.checked;\r\n\r\n      return obj;\r\n    });\r\n\r\n    if (e.target.checked) setChosenCount(chosenCount + 1);\r\n    else setChosenCount(chosenCount - 1);\r\n\r\n    setChosen(newArray);\r\n  };\r\n\r\n  const updateAllChoices = (e) => {\r\n    let newArray = null;\r\n    if (e.target.checked) {\r\n      newArray = Array.from(choices).map((obj) => {\r\n        obj.checked = true;\r\n        return obj;\r\n      });\r\n    } else {\r\n      newArray = Array.from(choices).map((obj) => {\r\n        obj.checked = false;\r\n        return obj;\r\n      });\r\n    }\r\n\r\n    if (e.target.checked) {\r\n      // allCheckBox.current.checked = false;\r\n\r\n      setChoicesCount(newArray.length);\r\n    } else setChoicesCount(0);\r\n\r\n    setChoices(newArray);\r\n  };\r\n\r\n  const updateAllChosen = (e) => {\r\n    let newArray = null;\r\n    if (e.target.checked) {\r\n      newArray = Array.from(chosen).map((obj) => {\r\n        obj.checked = true;\r\n        return obj;\r\n      });\r\n    } else {\r\n      newArray = Array.from(chosen).map((obj) => {\r\n        obj.checked = false;\r\n        return obj;\r\n      });\r\n    }\r\n\r\n    if (e.target.checked) {\r\n      setChosenCount(newArray.length);\r\n    } else setChosenCount(0);\r\n\r\n    setChosen(newArray);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dragContainer}>\r\n      <div className={classes.dndContainer}>\r\n        <div>\r\n          <InputField\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n          />\r\n          <DragDropContext\r\n            onDragEnd={onDragEndHandlerForChoices}\r\n            isDropDisabled={loading}\r\n          >\r\n            <div className={classes.allSection}>\r\n              <div>\r\n                <GreenCheckbox\r\n                  onChange={updateAllChoices}\r\n                  checked={\r\n                    choicesCount === choices.length && choices.length > 0\r\n                  }\r\n                />\r\n                <label>Choices</label>\r\n              </div>\r\n              <p>\r\n                {choicesCount}/{choices.length} selected\r\n              </p>\r\n            </div>\r\n\r\n            <div className={classes.checkboxes}>\r\n              <Droppable droppableId={uuid()}>\r\n                {(provided) => (\r\n                  <div>\r\n                    <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                      {choices.map((choice, index) => {\r\n                        return (\r\n                          <Draggable\r\n                            draggableId={choice.title}\r\n                            key={choice.title + index}\r\n                            index={index}\r\n                          >\r\n                            {(provided) => (\r\n                              <li\r\n                                key={index}\r\n                                className={classes.checkboxContainer}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                ref={provided.innerRef}\r\n                              >\r\n                                <GreenCheckbox\r\n                                  className={classes.checkbox_style}\r\n                                  checked={choice.checked}\r\n                                  name={choice.title}\r\n                                  onChange={onCheckedChoicesHandler}\r\n                                  // inputProps={{\r\n                                  //   \"aria-label\": \"secondary checkbox\",\r\n                                  // }}\r\n                                />\r\n                                {choices.length === index + 1 ? (\r\n                                  <label ref={lastOption}>{choice.title}</label>\r\n                                ) : (\r\n                                  <label>{choice.title}</label>\r\n                                )}\r\n                              </li>\r\n                            )}\r\n                          </Draggable>\r\n                        );\r\n                      })}\r\n                      {provided.placeholder}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </DragDropContext>\r\n        </div>\r\n\r\n        <div className={classes.btnContainer}>\r\n          <Button\r\n            className={classes.greenButton}\r\n            variant=\"contained\"\r\n            disabled={!choicesCount}\r\n            onClick={transferToRight}\r\n          >\r\n            <ChevronRightIcon />\r\n          </Button>\r\n          <Button\r\n            className={classes.greenButton}\r\n            variant=\"contained\"\r\n            disabled={!chosenCount}\r\n            onClick={transferToLeft}\r\n          >\r\n            <ChevronLeftIcon />\r\n          </Button>\r\n\r\n          {loading ? <p>Loading...</p> : \"\"}\r\n        </div>\r\n\r\n        <div>\r\n          <InputField/>\r\n          <DragDropContext\r\n            onDragEnd={onDragEndHandlerForChosen}\r\n            onDragUpdate={dragUpdate}\r\n          >\r\n            <div className={classes.allSection}>\r\n              <div>\r\n                <GreenCheckbox\r\n                  //inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  onChange={updateAllChosen}\r\n                  checked={\r\n                    chosenCount === chosen.length && chosen.length\r\n                      ? true\r\n                      : false\r\n                  }\r\n                />\r\n                <label>Chosen</label>\r\n              </div>\r\n              <p className=\"count-label\">\r\n                {chosenCount}/{chosen.length} selected\r\n              </p>\r\n            </div>\r\n            <div className={classes.checkboxes}>\r\n              <Droppable droppableId={uuid()}>\r\n                {(provided) => (\r\n                  <div>\r\n                    <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                      {chosen.map((chosen, index) => {\r\n                        return (\r\n                          <Draggable\r\n                            draggableId={chosen.title}\r\n                            key={chosen.title}\r\n                            index={index}\r\n                          >\r\n                            {(provided) => (\r\n                              <li\r\n                                key={index}\r\n                                className={classes.checkboxContainer}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                ref={provided.innerRef}\r\n                              >\r\n                                <GreenCheckbox\r\n                                  className={classes.checkbox_style}\r\n                                  checked={chosen.checked}\r\n                                  name={chosen.title}\r\n                                  onChange={onCheckedChosenHandler}\r\n                                  // inputProps={{\r\n                                  //   \"aria-label\": \"primary checkbox\",\r\n                                  // }}\r\n                                />\r\n                                <label>{chosen.title}</label>\r\n                              </li>\r\n                            )}\r\n                          </Draggable>\r\n                        );\r\n                      })}\r\n                      {provided.placeholder}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </DragDropContext>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectOptions;\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\n//import SelectAndDrag from \"./common/Drag&Drop/SelectOptionsScroller\";\r\nimport SelectAndDrag from \"./common/Drag&Drop/SelectOptions\";\r\n\r\nconst App = () => {\r\n\r\n const [options, setOptions] = useState([]);\r\n const [pageNumber,setPageNumber] = useState(1);\r\n\r\n\r\n const nextData = () =>{\r\n  setPageNumber(prevPageNumber => prevPageNumber + 1); \r\n\r\n }\r\n//  const setSearchQuery = (searchQuery) =>{\r\n//   setQuery(searchQuery);\r\n//  }\r\n\r\n  useEffect(() => {\r\n    console.log('calling useeffect of app.js');\r\n    async function fetchData() {\r\n      try {\r\n        //Just pass options to the drag and drop.\r\n\r\n        console.log(pageNumber)\r\n        const data = await axios.get(\r\n          `https://randomuser.me/api?page=${pageNumber}&results=10`\r\n        );\r\n        let names = data.data.results.map((obj) => obj.name);\r\n\r\n        console.log(names);\r\n        if(options)\r\n        setOptions([...options,...names]);\r\n        else\r\n        setOptions(names);\r\n\r\n        console.log(options);\r\n\r\n      } catch (err) {\r\n         alert(err.message)\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [pageNumber,setOptions]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log('calling useeffect of app.js');\r\n  //   async function fetchData() {\r\n  //     try {\r\n  //       //Just pass options to the drag and drop.\r\n  //       if(query)\r\n  //       {\r\n  //      const data = await axios.get(\r\n  //         `http://openlibrary.org/search.json?q=${query}&page=${pageNumber}`\r\n  //       );\r\n  //       console.log(data);\r\n  //       let names = data.data.results.map((obj) => obj.name);\r\n\r\n\r\n  //       if(options)\r\n  //       setOptions([...options,...names]);\r\n  //       else\r\n  //       setOptions(names);\r\n  //       }\r\n  //     } catch (err) {\r\n  //       //  alert(err)\r\n  //     }\r\n  //   }\r\n\r\n  //   fetchData();\r\n  // }, [pageNumber,query]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <SelectAndDrag data={options} getNextOptions = {nextData}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}